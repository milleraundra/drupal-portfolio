<?php

/*
* @file
* Functional test for DNA Generator
*/

class DNAGeneratorFunctionalTest extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
            'name' => 'DNA Generator Web Tests',
            'description' => 'Tests web functionality of custom module DNA Generator',
            'group' => 'Custom Modules',
        );
    }

    public function setUp() {
        //enable module
        parent::setUp(array('dna_generator'));
    }

    public function testDNAGeneratorReturn() {
        $this->drupalGet('dna_generator_input');
        $form_value = array();
        $form_value['input'] = 'TAC';
        $this->drupalPost('/dna_generator_input', $form_value, t('Submit'));

        $this->assertText('TAC', 'Original Input');
        $this->assertText('ATG', 'Second Input');
    }

}


/* Unit Test for DNA Generator */
class DNAGeneratorUnitTest extends DrupalUnitTestCase
{

    public static function getInfo()
    {
        return array(
            'name' => 'DNA Generator Unit Tests',
            'description' => 'Test functionality of custom module DNA Generator',
            'group' => 'Custom Modules',
        );
    }

    function testDNAGenerator()
    {
        //Letter A
        $description = 'Input of letter A should return T.';
        $input = 'A';
        $result = dna_generator($input);
        $this->assertEqual('T', $result);

        //Letter T
        $description = 'Input of letter T should return A.';
        $input = 'T';
        $result = dna_generator($input);
        $this->assertEqual('A', $result);

        //Letter C
        $description = 'Input of letter C should return G.';
        $input = 'C';
        $result = dna_generator($input);
        $this->assertEqual('G', $result);

        //Letter G
        $description = 'Input of letter G should return C.';
        $input = 'G';
        $result = dna_generator($input);
        $this->assertEqual('C', $result);

        //String of letters
        $description = 'Input of multiple values will return string of opposite values';
        $input = 'TACGAGC';
        $result = dna_generator($input);
        $this->assertTrue('ATGCTCG', $result);
    }

}
