<?php

global $alphabet;
$alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');

function shift_cipher_menu() {
    $items['cipher_input'] = array(
        'title' => 'Shift Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('shift_cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher_output'] = array(
        'title' => 'Message Encrypted!',
        'page callback' => 'cipher_results',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function shift_cipher_form() {
    $form['cipher_form'] = array(
        '#title' => t('Encrypt Your Message With Shift Cipher!'),
        '#type' => 'fieldset',
    );
    $form['cipher_form']['string'] = array(
        '#title' => t("Enter text to encrypt."),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#element_validate' => array('element_validate_sanitize'),
    );
    $form['cipher_form']['distance'] = array(
        '#title' => t("Enter a distance (e.g. 1, -3, or 14)."),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#element_validate' => array('element_validate_integer_positive'),
    );
    $form['cipher_form']['direction'] = array(
        '#title' => t("Enter a direction (left or right)."),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#element_validate' => array('element_validate_direction'),
    );
    $form['submit'] = array(
        '#value' => t('Submit your vote!'),
        '#type' => 'submit',
    );
    return $form;
}


//validation
function element_validate_sanitize($element) {
    $string = $element['#value'];
    $special_characters = '/[^\w!?.,":;()\'\-\s*]/';
    $numbers = '/[0-9]/';
    if (preg_match( $special_characters, $string) === 1) {
        form_error($element, "Only include punctuation in your text.");
    } elseif ( preg_match($numbers, $string) === 1) {
        form_error($element, "You cannot use numbers in your string.");
    }
}

function element_validate_direction($element) {
    $direction = $element['#value'];
    if ( $direction !== 'left' && $direction !== 'right') {
        form_error($element, "Choose 'left' or 'right'. Case sensative. ");
    }
}


//submit and calculations
function shift_cipher_form_submit($form, &$form_state) {
    //user input
    $lowercase_string = strtolower($form_state['values']['string']);
    $string_to_array = str_split($lowercase_string);
    $distance = $form_state['values']['distance'];
    $direction = $form_state['values']['direction'];
    //resources
    global $alphabet;
    $punctuation_and_spaces = '/[!?.,":;()\'\-\s*]/';
    $final_array = array();


    foreach ($string_to_array as $character) {
        //check for punctuation and spaces
        if (preg_match($punctuation_and_spaces, $character) === 1) {
            array_push($final_array, $character);
        } else {
            for ($i = 0; $i < count($alphabet); $i++) {
                if ($alphabet[$i] === $character) {
                    //determine index of new letter based on direction given
                    if ($direction === 'left') {
                        $new_index = $i - $distance;
                    } else {
                        $new_index = $i + $distance;
                    }
                    //account for numbers outside array length
                    if($new_index < 0) {
                        $new_index = $new_index + 26;
                    } elseif ($new_index > 25) {
                        $new_index = $new_index - 26;
                    }

                    array_push($final_array, $alphabet[$new_index]);
                } else {

                }
            }
        }
    }

    $final_string = implode($final_array);
    $_SESSION['encrypted_message'] = $final_string;
    $form_state['redirect'] = 'cipher_output';
}

function cipher_results() {
    $message = "
        <h4>Here is your final message:</h4>
        <p>" . $_SESSION['encrypted_message']. " </p>
        <a href='/cipher_input'>Play Again</a>
    ";
    return $message;
}
